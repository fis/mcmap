keepalive: 0x00

login: 0x01
- int id
  client -> server: protocol version
  server -> client: player entity ID
- string nick
  client -> server: nickname
- long seed
  server -> client: map seed value
- byte dim
  server -> client: dimension (0 normal, -1 nether)

handshake: 0x02
- string data: username (from client), connection hash (from server)

chat: 0x03
- string message: up to 100 bytes

time: 0x04
- long time: world time in minutes

entity_equipment: 0x05
- int id:       entity ID
- short slot:   slot (0 = held, 1..4 = armor)
- short item:   item ID
- short damage: damage

spawn_position: 0x06
- int x: these are in block coords
- int y
- int z

use_entity: 0x07
- int player: entity ID of player (ignored)
- int target: entity ID of target
- bool left: true for left-click

update_health: 0x08
- short health: 0 .. 20 (in 0.5 hearts)

respawn: 0x09
- byte dim: world identifier

player_ping: 0x0a
- bool ground: true if on ground

player_move: 0x0b
- double x
- double y
- double stance
- double z
- bool ground: true if on ground

player_rotate: 0x0c
- float yaw
- float pitch
- bool ground: true if on ground

player_move_rotate: 0x0d
- double x
- double y:      from client, stance
- double stance: from client, y
- double z
- float yaw
- float pitch
- bool ground: true if on ground

player_dig: 0x0e
- byte action: 0..4 = start, dig, stop, break, drop
- int x
- byte y
- int z
- byte face: 0..5 = which face to hit

place: 0x0f
- int x
- byte y
- int z
- byte face: face to place against
- item item: what to place there

entity_holding: 0x10
- short slot: selected slot index (0..8)

use_bed: 0x11
- int player: Player ID
- byte unk: who knows
- int x
- byte y
- int z

entity_animate: 0x12
- int id: player ID
- byte animation: animation ID

entity_action: 0x13
- int id: player ID
- byte action: action ID

entity_spawn_named: 0x14
- int id:      player ID
- string name: player name
- int x
- int y
- int z
- byte yaw
- byte pitch
- short item:  currently-holding item ID

entity_spawn_pickup: 0x15
- int id
- short item
- byte count
- short damage
- int x
- int y
- int z
- byte yaw
- byte pitch
- byte roll

entity_collect: 0x16
- int pickup: collected entity ID
- int player: collecting entity ID

entity_spawn_object: 0x17
- int id
- byte type: spawned object type
- int x
- int y
- int z
- object_data data: variable-length object data field

entity_spawn_mob: 0x18
- int id
- byte type: spawned mob type
- int x
- int y
- int z
- byte yaw
- byte pitch
- entity_data data: metadata stream

entity_spawn_painting: 0x19
- int id
- string name: painting name, eg. "Creepers"
- int x
- int y
- int z
- int dir: 0..3 = -z, -x, +z, +x: direction the painting faces

unknown_0x1b: 0x1b
- float unk1: who knows
- float unk2: who knows
- float unk3: who knows
- float unk4: who knows
- bool unk5: who knows
- bool unk6: who knows

entity_velocity: 0x1c
- int id
- short dx: delta-x
- short dy: delta-y
- short dz: delta-z

entity_destroy: 0x1d
- int id

entity: 0x1e
- int id

entity_rel_move: 0x1f
- int id
- byte dx
- byte dy
- byte dz

entity_look: 0x20
- int id
- byte yaw
- byte pitch

entity_rel_move_look: 0x21
- int id
- byte dx
- byte dy
- byte dz
- byte yaw
- byte pitch

entity_move: 0x22
- int id
- int x: absolute coords here
- int y
- int z
- byte yaw
- byte pitch

entity_damage: 0x26
- int id
- byte status: entity status (hurt/dead/???)

entity_attach: 0x27
- int player: player entity ID
- int vehicle: vehicle entity ID

entity_metadata: 0x28
- int id
- entity_data data: metadata stream

prechunk: 0x32
- int cx:    chunk X
- int cz:    chunk Z
- bool load: false to unload, true to initialize

chunk: 0x33
- int x:           block-level X/Y/Z offsets
- short y
- int z
- byte xsize:      X size - 1
- byte ysize:      Y size - 1
- byte zsize:      Z size - 1
- byte_array data: compressed chunk data

multi_set_block: 0x34
- int cx: chunk X
- int cz: chunk Z
- block_array data: uncompressed (coord, block, meta) tuples

set_block: 0x35
- int x
- byte y
- int z
- byte data: block ID
- byte meta: metadata value

play_block: 0x36
- int x
- short y
- int z
- byte type:  instrument type
- byte pitch: note pitch

explosion: 0x3c
- double x
- double y
- double z
- float radius:         maybe?
- explosion_array data: list of explosion records

sound_effect: 0x3d
- int id: sound effect ID
- int x
- byte y
- int z
- int data: sound metadata for some events

new_or_invalid_state: 0x46
- byte reason: 0 = invalid bed, 1/2 = start/end rain, 3 = game mode change

thunderbolt: 0x47
- int id: entity ID for the thunderbolt
- byte raining: always true at the moment
- int x
- int y
- int z

inventory_open: 0x64
- byte window:       window ID
- byte type:         inventory type (0 = basic, 1 = workbench, 2 = furnace)
- string_utf8 title: inventory window title
- byte slots:        number of additional slots

inventory_close: 0x65
- byte window: window ID

inventory_click: 0x66
- byte window: window ID
- short slot:  clicked slot (or -999 if outside)
- bool right:  true when right-clicking
- short id:    transaction ID
- byte shift:  true if shift was held
- item item:   clicked item in the slot

inventory_update: 0x67
- byte window:  window ID
- short slot:   slot index
- item item:    item to place

inventory_data: 0x68
- byte window:     window ID
- item_array data: full inventory contents

inventory_progress: 0x69
- byte window: window ID
- short bar:   progress bar index
- short value: progress bar value

inventory_ack: 0x6a
- byte window: window ID
- short id:    transaction ID
- bool ack:    true if the transaction was accepted

sign_update: 0x82
- int x
- short y
- int z:
- string line1: sign contents 
- string line2
- string line3
- string line4

map_data: 0x83
- short type: type of modified item (358 = map)
- short id: map ID (item damage value)
- map_array data: map data

increment_statistic: 0xc8
- int id: Statistic ID
- byte amount

disconnect: 0xff
- string reason: disconnection reason
