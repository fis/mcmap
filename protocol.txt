keepalive: 0x00

login: 0x01
- int
  client -> server: protocol version
  server -> client: player entity ID
- string
  client -> server: nickname
- long
  server -> client: map seed value
- byte
  server -> client: dimension (0 normal, -1 nether)

handshake: 0x02
- string: username (from client), connection hash (from server)

chat: 0x03
- string: message (up to 100 bytes)

time: 0x04
- long: world time in minutes

entity_equipment: 0x05
- int:   entity ID
- short: slot (0 = held, 1..4 = armor)
- short: item ID
- short: damage

spawn_position: 0x06
- int, int, int: X, Y, Z in block coords

use_entity: 0x07
- int: entity ID of player (ignored)
- int: entity ID of target
- bool: true for left-click

update_health: 0x08
- short: player health, 0 .. 20 (in 0.5 hearts)

respawn: 0x09
- byte: world

player_ping: 0x0a
- bool: true if on ground

player_move: 0x0b
- double, double, double, double: X, Y, stance, Z
- bool: true if on ground

player_rotate: 0x0c
- float, float: yaw, pitch
- bool: true if on ground

player_move_rotate: 0x0d
- double, double, double, double:
  from client: X, stance, Y, Z
  from server: X, Y, stance, Z
- float, float: yaw, pitch
- bool: true if on ground

player_dig: 0x0e
- byte: action (0..4 = start, dig, stop, break, drop)
- int, byte, int: X, Y, Z
- byte: face to hit

place: 0x0f
- int, byte, int: X, Y, Z
- byte: face to place against
- item: what to place there

entity_holding: 0x10
- short: selected slot index (0..8)

use_bed: 0x11
- int: Player ID
- byte: who knows
- int: X?
- byte: Y?
- int: Z?

entity_animate: 0x12
- int: player ID
- byte: animation ID

entity_action: 0x13
- int: player ID
- byte: action ID

entity_spawn_named: 0x14
- int:           player ID
- string:        player name
- int, int, int: X, Y, Z
- byte, byte:    yaw, pitch
- short:         currently-holding item ID

entity_spawn_pickup: 0x15
- int:                entity ID
- short, byte, short: item ID, count, damage
- int, int, int:      X, Y, Z
- byte, byte, byte:   yaw, pitch, roll

entity_collect: 0x16
- int: collected entity ID
- int: collecting entity ID

entity_spawn_object: 0x17
- int:           entity ID
- byte:          object type
- int, int, int: X, Y, Z
- object_data:   Variable length object data field.

entity_spawn_mob: 0x18
- int:           entity ID
- byte:          mob type
- int, int, int: X, Y, Z
- byte, byte:    yaw, pitch
- entity_data:   metadata stream

entity_spawn_painting: 0x19
- int:           entity ID
- string:        painting name, eg. "Creepers"
- int, int, int: X, Y, Z
- int:           ???

unknown_0x1b: 0x1b
- float: who knows
- float: who knows
- float: who knows
- float: who knows
- bool: who knows
- bool: who knows

entity_velocity: 0x1c
- int:                 entity ID
- short, short, short: velocity X, Y, Z

entity_destroy: 0x1d
- int: entity ID

entity: 0x1e
- int: entity ID

entity_rel_move: 0x1f
- int:              entity ID
- byte, byte, byte: delta X, Y, Z

entity_look: 0x20
- int:        entity ID
- byte, byte: yaw, pitch

entity_rel_move_look: 0x21
- int:              entity ID
- byte, byte, byte: delta X, Y, Z
- byte, byte:       yaw, pitch

entity_move: 0x22
- int:           entity ID
- int, int, int: absolute X, Y, Z
- byte, byte:    yaw, pitch

entity_damage: 0x26
- int:  entity ID
- byte: status

entity_attach: 0x27
- int: player ID
- int: vehicle ID

entity_metadata: 0x28
- int:         entity ID
- entity_data: metadata stream

prechunk: 0x32
- int, int: chunk X, Z
- bool:     false to unload, true to initialize

chunk: 0x33
- int, short, int:  offset X, Y, Z
- byte, byte, byte: size X, Y, Z
- byte_array:       compressed chunk data

multi_set_block: 0x34
- int, int:    chunk X, Z
- block_array: uncompressed (coord, block, meta) tuples

set_block: 0x35
- int, byte, int: block X, Y, Z
- byte, byte:     block type and metadata

play_block: 0x36
- int, short, int: block X, Y, Z
- byte, byte:      instrument type and pitch

explosion: 0x3c
- double, double, double: X, Y, Z
- float:                  maybe radius
- explosion_array:        list of explosion records

sound_effect: 0x3d
- int:    Effect ID
- int:    X
- byte:   Y
- int:    Z
- int:    Sound data

new_or_invalid_state: 0x46
- byte:   Reason?

weather: 0x47
- int:    ID?
- byte:   Raining?
- int:    X?
- int:    Y?
- int:    Z?

inventory_open: 0x64
- byte:        window ID
- byte:        inventory type (0 = basic, 1 = workbench, 2 = furnace)
- string_utf8: inventory window title
- byte:        number of additional slots

inventory_close: 0x65
- byte: window ID

inventory_click: 0x66
- byte:  window ID
- short: clicked slot (or -999 if outside)
- bool:  true when right-clicking
- short: transaction ID
- byte:  shift
- item:  clicked item in the slot

inventory_update: 0x67
- byte:  window ID
- short: slot index
- item:  item to place

inventory_data: 0x68
- byte:       window ID
- item_array: full inventory contents

inventory_progress: 0x69
- byte:  window ID
- short: progress bar index
- short: progress bar value

inventory_ack: 0x6a
- byte:  window ID
- short: transaction ID
- bool:  true if the transaction was accepted

sign_update: 0x82
- int, short, int:                X, Y, Z
- string, string, string, string: sign contents

map_data: 0x83
- short: unknown
- short: map ID?
- map_array: Map data

increment_statistic: 0xc8
- int: Statistic ID
- byte: Amount

disconnect: 0xff
- string: disconnection reason
